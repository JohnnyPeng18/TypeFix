commit 30362ed828bebdd58d4f1f74d70236d32547d52a
Author: jbrockmendel <jbrockmendel@gmail.com>
Date:   Tue Oct 22 18:38:56 2019 -0700

    BUG: fix TypeError raised in maybe_downcast_numeric (#29103)

diff --git a/pandas/core/dtypes/cast.py b/pandas/core/dtypes/cast.py
index dd001e78c0..7fcaf60088 100644
--- a/pandas/core/dtypes/cast.py
+++ b/pandas/core/dtypes/cast.py
@@ -202,7 +202,7 @@ def maybe_downcast_numeric(result, dtype, do_round: bool = False):
         r = result.ravel()
         arr = np.array([r[0]])
 
-        if isna(arr).any() or not np.allclose(arr, trans(arr).astype(dtype), rtol=0):
+        if isna(arr).any():
             # if we have any nulls, then we are done
             return result
 
diff --git a/pandas/core/groupby/generic.py b/pandas/core/groupby/generic.py
index 8ba9dbcc57..9c9598273e 100644
--- a/pandas/core/groupby/generic.py
+++ b/pandas/core/groupby/generic.py
@@ -262,7 +262,7 @@ class SeriesGroupBy(GroupBy):
 
             try:
                 return self._python_agg_general(func, *args, **kwargs)
-            except AssertionError:
+            except (AssertionError, TypeError):
                 raise
             except Exception:
                 result = self._aggregate_named(func, *args, **kwargs)
diff --git a/pandas/tests/dtypes/cast/test_downcast.py b/pandas/tests/dtypes/cast/test_downcast.py
index d574b03a8c..9e2eca5259 100644
--- a/pandas/tests/dtypes/cast/test_downcast.py
+++ b/pandas/tests/dtypes/cast/test_downcast.py
@@ -1,3 +1,5 @@
+import decimal
+
 import numpy as np
 import pytest
 
@@ -25,6 +27,13 @@ from pandas.util import testing as tm
             "infer",
             np.array([8, 8, 8, 8, 9], dtype=np.int64),
         ),
+        (
+            # This is a judgement call, but we do _not_ downcast Decimal
+            #  objects
+            np.array([decimal.Decimal(0.0)]),
+            "int64",
+            np.array([decimal.Decimal(0.0)]),
+        ),
     ],
 )
 def test_downcast(arr, expected, dtype):